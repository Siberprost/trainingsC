//Сема сортировки и упорядочивания массива на примере поиска минимального элемента:
//
//схема:
//1. Найти позицию минимального элемента в неотсортированной части массива
//2. Произвести обмен этого значения со значением первой неотсортиованной позиции
//3. Провторять пока есть не отсортированные элементы

// Пример:
//заведём массив, который будем отсортировывать ниже
int [] arr ={1, 8, 19, 12, 4, 7, 1, 14, 2, 3, 7, 11, 7};
//будет неплохо, если в коде будет "задача" которая позволит вывести данный массив на экран
void PrintArray (int[] array) //в скобках прописываем, что принимается некий массив
{
    int count = array.Length; // через переменную count назначили размер массива, равный длинне массива, к которому применяется переменная
    for (int i = 0; i < count; i++) //  for для цикла.  Значение i чтоб распознать порядковый номер числа в массиве, 
    {
        Console.Write($"{array[i]} "); //приказываем консоли написать array(множество) из i, после фигурной скобки пробел, чтоб значения были через пробел
    }
    Console.WriteLine();  //тут просто делаем пустую строчку, чтоб если сразу после что-то будет написано, то отделится
}
// далее нам надо бы написать метод, который упорядочит массив, назовём его SelectionSort
void SelectionSort (int[] array)
{
    for(int i = 0; i < array.Length - 1; i++) // тут мы фиксируем теущий элемент для дальнейшей его проверки (код ниже)|| 1 отнимается из длинны т.к. мы в 27 строке сделали i+1
    {
        int minPosition = i; //предположми, позиция i миниматьна
        for(int j = i + 1; j < array.Length; j++) // тут мы ищем тот самый минимальный элемент
        {
            if(array[j] < array[minPosition]) minPosition = j; // если проверяемый элемент меньше того, что сейчас называется мин, то мин = j
        }


        int temp = array[i]; // значение в точке i мы запоминаем, копируя в значение temp
        array[i] = array[minPosition]; // на место точки i мы кладём значение minPosition
        array[minPosition] = temp;
    }
}
PrintArray(arr);
SelectionSort(arr);
PrintArray(arr);
